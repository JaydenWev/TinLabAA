<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
bool nogo = false;

clock TimeElapsed;

typedef int[0,10] id_i;

// waterNiveau
int[0,12] waterLevel = 3;
int[0,5] waterLevelLow = 2;
int[5,10] waterLevelHigh = 10;


// deur
const int maxDoor = 2;
typedef int[0,maxDoor - 1] d_id;

chan opening[d_id], closing[d_id];

// waterSensor
chan waterUp, waterDown;
// waterPump
chan pumpUp, pumpDown, pumpOff;

// queue
const int queueAmount = 2;
const int maxBoatId = 10;

const int maxQueue = 2;

typedef int[0,maxQueue-1] q_id;

chan queueChan[q_id];

int[0,maxBoatId] sharedBoat;

// trafficLight
const int maxLights = 2;
typedef int[0, maxLights - 1] l_id;

chan lightOn[l_id], lightOff[l_id];
chan lightLowOff, lightLowOn, lightHighOff, lightHighOn;

// channel queue</declaration>
	<template>
		<name x="5" y="5">Main</name>
		<declaration>// Place local declarations here.
bool toHigh, toLow;
int[0, maxBoatId] activeBoatId;</declaration>
		<location id="id0" x="476" y="-204">
			<name x="466" y="-238">exitHigh</name>
		</location>
		<location id="id1" x="476" y="68">
			<name x="476" y="34">enterHigh</name>
		</location>
		<location id="id2" x="-816" y="-204">
			<name x="-875" y="-238">exitLow</name>
		</location>
		<location id="id3" x="-816" y="68">
			<name x="-901" y="42">EnterLow</name>
		</location>
		<location id="id4" x="340" y="-68">
			<name x="357" y="-93">HighOpen</name>
		</location>
		<location id="id5" x="-170" y="-204">
			<name x="-195" y="-238">Draining</name>
			<label kind="invariant" x="-263" y="-187">waterLevel &gt;= waterLevelLow</label>
		</location>
		<location id="id6" x="68" y="-68">
			<name x="-16" y="-102">HighClosed</name>
		</location>
		<location id="id7" x="-170" y="68">
			<name x="-212" y="34">Filling</name>
			<label kind="invariant" x="-255" y="93">waterLevel &lt;= waterLevelHigh</label>
		</location>
		<location id="id8" x="-688" y="-68">
			<name x="-764" y="-85">LowOpen</name>
		</location>
		<location id="id9" x="-408" y="-68">
			<name x="-399" y="-102">LowClosed</name>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="guard" x="-960" y="-297">activeBoatId != 0</label>
			<label kind="assignment" x="-960" y="-280">activeBoatId := 0</label>
			<nail x="-918" y="-204"/>
			<nail x="-816" y="-306"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="552" y="-306">activeBoatId != 0</label>
			<label kind="assignment" x="552" y="-289">activeBoatId := 0</label>
			<nail x="578" y="-204"/>
			<nail x="476" y="-306"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="476" y="161">activeBoatId == 0</label>
			<label kind="synchronisation" x="476" y="178">queueChan[1]?</label>
			<label kind="assignment" x="476" y="195">activeBoatId := sharedBoat</label>
			<nail x="578" y="68"/>
			<nail x="476" y="170"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="guard" x="-935" y="161">activeBoatId == 0</label>
			<label kind="synchronisation" x="-935" y="178">queueChan[0]?</label>
			<label kind="assignment" x="-935" y="195">activeBoatId := sharedBoat</label>
			<nail x="-918" y="68"/>
			<nail x="-816" y="170"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="guard" x="484" y="-153">activeBoatId == 0</label>
			<nail x="476" y="-68"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="484" y="-34">activeBoatId != 0</label>
			<label kind="synchronisation" x="484" y="-17">lightHighOff!</label>
			<label kind="assignment" x="484" y="0">toLow := true</label>
			<nail x="476" y="-68"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id8"/>
			<label kind="guard" x="-935" y="-34">activeBoatId != 0</label>
			<label kind="synchronisation" x="-935" y="-17">lightOff[0]!</label>
			<label kind="assignment" x="-935" y="0">toHigh := true</label>
			<nail x="-816" y="-68"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id8"/>
			<label kind="guard" x="-935" y="-153">activeBoatId == 0</label>
			<nail x="-816" y="-68"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="guard" x="357" y="-246">toHigh</label>
			<label kind="assignment" x="357" y="-229">toHigh := false</label>
			<nail x="340" y="-204"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id1"/>
			<label kind="guard" x="348" y="85">activeBoatId == 0</label>
			<label kind="synchronisation" x="357" y="68">lightHighOn!</label>
			<label kind="comments" x="348" y="110">if queue not empty</label>
			<nail x="340" y="68"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id2"/>
			<label kind="guard" x="-783" y="-238">toLow</label>
			<label kind="assignment" x="-782" y="-221">toLow := false</label>
			<nail x="-688" y="-204"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id3"/>
			<label kind="guard" x="-799" y="85">activeBoatId == 0</label>
			<label kind="synchronisation" x="-799" y="68">lightOn[0]!</label>
			<label kind="comments" x="-807" y="110">If queue notEmpty</label>
			<nail x="-688" y="68"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="guard" x="102" y="-204">!toHigh</label>
			<label kind="synchronisation" x="103" y="-187">closing[1]!</label>
			<nail x="306" y="-170"/>
			<nail x="102" y="-170"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="guard" x="102" y="30">!toLow</label>
			<label kind="synchronisation" x="102" y="51">opening[1]!</label>
			<label kind="assignment" x="102" y="68">waterLevel := waterLevelHigh</label>
			<nail x="102" y="34"/>
			<nail x="306" y="34"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id9"/>
			<label kind="guard" x="-390" y="-238">waterLevel &lt;= waterLevelLow</label>
			<label kind="synchronisation" x="-390" y="-221">pumpOff!</label>
			<nail x="-408" y="-204"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="guard" x="-153" y="34">waterLevel &gt;= waterLevelHigh</label>
			<label kind="synchronisation" x="-153" y="51">pumpOff!</label>
			<nail x="68" y="68"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-136" y="-238">!toHigh</label>
			<label kind="synchronisation" x="-135" y="-221">pumpDown!</label>
			<nail x="68" y="-204"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id7"/>
			<label kind="guard" x="-399" y="25">!toLow</label>
			<label kind="synchronisation" x="-399" y="42">pumpUp!</label>
			<nail x="-408" y="68"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="-647" y="-200">!toLow</label>
			<label kind="synchronisation" x="-646" y="-187">closing[0]!</label>
			<nail x="-646" y="-170"/>
			<nail x="-442" y="-170"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-637" y="34">!toHigh</label>
			<label kind="synchronisation" x="-637" y="51">opening[0]!</label>
			<label kind="assignment" x="-637" y="68">waterLevel := waterLevelLow</label>
			<nail x="-442" y="34"/>
			<nail x="-646" y="34"/>
		</transition>
	</template>
	<template>
		<name>Door</name>
		<parameter>d_id id</parameter>
		<declaration>clock d;

const int doorTime = 60;

int[0, 10] doorPos = 0;</declaration>
		<location id="id10" x="-306" y="-76">
			<name x="-374" y="-93">Closing</name>
			<committed/>
		</location>
		<location id="id11" x="-170" y="-195">
			<name x="-161" y="-229">Open</name>
		</location>
		<location id="id12" x="-34" y="-68">
			<name x="-17" y="-85">Opening</name>
			<committed/>
		</location>
		<location id="id13" x="-170" y="60">
			<name x="-230" y="68">Closed</name>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="-476" y="-102">doorPos &gt; 1</label>
			<label kind="assignment" x="-476" y="-85">doorPos--</label>
			<nail x="-391" y="-153"/>
			<nail x="-391" y="-8"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="guard" x="68" y="-85">doorPos &lt; 9</label>
			<label kind="assignment" x="68" y="-68">doorPos++</label>
			<nail x="43" y="0"/>
			<nail x="43" y="-136"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id13"/>
			<label kind="guard" x="-306" y="17">doorPos &lt;= 1</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-306" y="-153">closing[id]?</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-136" y="-187">doorPos &gt;= 9</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-102" y="17">opening[id]?</label>
		</transition>
	</template>
	<template>
		<name>Queue</name>
		<parameter>q_id t</parameter>
		<declaration>


id_i v;
const int maxWaiting = 4;
const int maxBoatNum = maxBoatId;
int[0, maxBoatNum] boat_id = 1;

id_i queue[maxWaiting];
int[0, maxWaiting] queueSize = 0;

bool isFull(){
    if (queueSize == maxWaiting){
        return true;
    }
    else {
        return false;
    }
}
bool isEmpty() {
    if (queueSize == 0){
        return true;
    }
    else {
        return false;
    }
}
void enterQueue() {
    if (!isFull()){
        queue[queueSize] = boat_id;
        queueSize++;
        if (boat_id == maxBoatNum){
            boat_id = 1;
        } else {
            boat_id++;
        }
    }
}
int exitQueue() {
    id_i temp;
    id_i i;
    if (!isEmpty()) {
            temp = queue[0]; // uit de queue stappen
        for (i = 0; i &lt; queueSize-1 ; i++){
            queue[i] = queue[i+1];
        }
        queue[queueSize-1] = 0; // laatste plek wordt leeg
        queueSize--;
        return temp;
    }
    else {
        return 0;
    }
}
</declaration>
		<location id="id14" x="-408" y="34">
		</location>
		<init ref="id14"/>
		<transition>
			<source ref="id14"/>
			<target ref="id14"/>
			<label kind="guard" x="-458" y="-102">!isFull()</label>
			<label kind="assignment" x="-459" y="-85">enterQueue()</label>
			<nail x="-399" y="17"/>
			<nail x="-340" y="-68"/>
			<nail x="-476" y="-68"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-476" y="136">queueChan[t]!</label>
			<label kind="assignment" x="-476" y="153">sharedBoat := exitQueue()</label>
			<nail x="-476" y="136"/>
			<nail x="-340" y="136"/>
		</transition>
	</template>
	<template>
		<name>WaterPump</name>
		<location id="id15" x="-144" y="0">
			<name x="-221" y="-17">PumpOut</name>
		</location>
		<location id="id16" x="144" y="0">
			<name x="161" y="-17">PumpIn</name>
		</location>
		<location id="id17" x="0" y="0">
			<name x="-10" y="-34">Idle</name>
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id15"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-297" y="17">waterDown?</label>
			<nail x="-221" y="68"/>
			<nail x="-221" y="-68"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="229" y="17">waterUp?</label>
			<nail x="221" y="68"/>
			<nail x="221" y="-59"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-126" y="21">pumpOff?</label>
			<nail x="-68" y="76"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="94" y="17">pumpOff?</label>
			<nail x="76" y="68"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-110" y="-93">pumpDown?</label>
			<nail x="-68" y="-76"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="42" y="-93">pumpUp?</label>
			<nail x="68" y="-76"/>
		</transition>
	</template>
	<template>
		<name>WaterSensor</name>
		<location id="id18" x="0" y="0">
		</location>
		<init ref="id18"/>
		<transition>
			<source ref="id18"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-42" y="59">waterDown!</label>
			<label kind="assignment" x="-41" y="76">waterLevel--</label>
			<nail x="59" y="76"/>
			<nail x="-59" y="76"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-34" y="-93">waterUp!</label>
			<label kind="assignment" x="-42" y="-76">waterLevel++</label>
			<nail x="59" y="-76"/>
			<nail x="-68" y="-76"/>
		</transition>
	</template>
	<template>
		<name>TrafficLight</name>
		<parameter>l_id light</parameter>
		<declaration>clock l;</declaration>
		<location id="id19" x="93" y="-76">
			<name x="83" y="-110">Orange</name>
		</location>
		<location id="id20" x="-77" y="-76">
			<name x="-87" y="-110">Green</name>
		</location>
		<location id="id21" x="-247" y="-76">
			<name x="-257" y="-110">Red</name>
		</location>
		<init ref="id21"/>
		<transition>
			<source ref="id19"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-229" y="8">lightOff[light]?</label>
			<nail x="93" y="26"/>
			<nail x="-247" y="26"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="guard" x="-34" y="-110">l &gt;= 30</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-229" y="-93">lightOn[light]?</label>
			<label kind="assignment" x="-229" y="-76">l := 0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
// Process = Template();


// List one or more processes to be composed into a system.
system Main, Door, WaterSensor, WaterPump, TrafficLight, Queue;

</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
